{"version":3,"sources":["Redditclone/Post/Post.module.css","Redditclone/UI/Menu/Menu.module.css","Redditclone/Submit/Submit.module.css","Redditclone/SubList/Sublist.module.css","Redditclone/UI/RightToolbar/RightToolbar.module.css","Redditclone/Post/Comment/CommentReplyMobile/CommentReplyMobile.module.css","Redditclone/Tombol/Tombol.module.css","Redditclone/Post/upVotePost/upVotePost.module.css","Redditclone/Post/downVotePost/downVotePost.module.css","Redditclone/UI/ToggleButton/ToggleButton.module.css","Redditclone/Post/Para/Para.module.css","Redditclone/UI/Logo/LogoCompany.module.css","Redditclone/Submit/Submitbox.module.css","Redditclone/UI/Dropback/Dropback.module.css","Redditclone/Post/Comment/UpVoteComment/UpVoteComment.module.css","Redditclone/Post/Comment/DownVoteComment/DownVoteComment.module.css","Redditclone/Post/Comment/Comment/CommentData.module.css","Redditclone/Submit/SubmitComment/SubmitComment.module.css","Redditclone/UI/LogoReply/LogoReply.module.css","Redditclone/UI/kids.js","Redditclone/Submit/Submit.js","Redditclone/Tombol/Tombol.js","Redditclone/SubmitData/SubmitData.js","Redditclone/Post/upVotePost/upVotePost.js","Redditclone/Post/downVotePost/downVotePost.js","Redditclone/UI/ToggleButton/ToggleButton.js","Redditclone/Post/Para/Para.js","Redditclone/UI/Logo/LogoCompany.js","Redditclone/Post/Post.js","Redditclone/Post/ShowPost/ShowPost.js","Redditclone/Subreddit/Subreddit.js","Redditclone/SubList/Sublist.js","Redditclone/UI/Dropback/Dropback.js","Redditclone/Submit/Submitbox.js","Redditclone/UI/RightToolbar/RightToolbar.js","Redditclone/UI/Menu/Menu.js","Redditclone/Post/Comment/UpVoteComment/UpVoteComment.js","Redditclone/Post/Comment/DownVoteComment/DownVoteComment.js","Redditclone/UI/HideComment/HideComment.js","Redditclone/Post/Comment/Comment/CommentData.js","Redditclone/Post/Comment/ShowReplyComment/ToggleReply.js","Redditclone/Submit/SubmitComment/SubmitComment.js","Redditclone/Post/Comment/ShowReplyComment/ShowReplyComment.js","Redditclone/Post/Comment/CommentPostData/CommentPostData.js","Redditclone/UI/LogoReply/LogoReply.js","Redditclone/Post/Comment/CommentReplyMobile/CommentReplyMobile.js","Redditclone/Post/Comment/CommentPost.js","Redditclone/Post/Comment/ShowPostComment/ShowPostComment.js","Redditclone/Start.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Kids","props","children","Submit","inputList","inputTitle","maxLength","className","cssmodule","SubmitInput","inputData","onChange","changed","value","SubmitTextarea","cols","rows","SubmitSub","Tombol","onClick","tombol","disabled","SubmitData","state","dataList","title","type","placeholder","validation","required","valid","paragraph","subreddit","isEmptied","continueTombol","event","preventDefault","dataPost","formIdentifier","listdata","vote","time","Date","code","Math","random","toString","substring","username","toFixed","substr","indexComment","fetch","method","headers","Accept","body","JSON","stringify","then","res","console","log","catch","err","alert","window","location","reload","history","replace","inputChange","inputIdentifier","updateddataList","updatedStatedataList","target","checkValid","dataIsValid","setState","rules","isValid","trim","this","arrayData","key","push","id","data","map","array","Component","withRouter","UpVotePost","isUpVoted","upVoteButton","newVote","datakey","prevState","upVotePost","style","color","downVotePost","isDownVoted","downVoteButton","ToggleButton","clicked","backgroundColor","show","Para","display","LogoCompany","Post","votePost","para","toggleButton","dataSub","paraToggleHandler","buttonToggleHandler","pathname","match","params","IDkey","index","parag","length","VoteBox","PostLogo","to","toLowerCase","PostThread","textDecoration","PostSubreddit","PostDesc","PostDesc0","PostDescP","PostDesc2","PostDesc1","cursor","VoteMedia","ShowPost","hari","load","json","fetchedListData","postData","sort","a","b","reverse","number","Subreddit","submit","Sublist","indexSub","moreClicked","toolbarSubreddit","moreIndex","buttonToolbarSub","sortFiltz","Set","filtz","slice","filtMenu","Toolbar","fontSize","ToolbarSub","Dropback","click","Submitbox","transform","opacity","overflowY","RightToolbar","Menu","submitDataConfirm","submitData","MobileSubmit","Toolbar_Post","Empty","footer","UpVoteComment","indexCom","DownVoteComment","HideComment","CommentData","comment","ToggleReply","SubmitComment","usernameComment","updateComment","continueComment","commentValue","listComment","codecomment","indexCommentChild","newIndex","datacomment","ShowReplyComment","CommentPostData","isComment","toggleComment","toggleVote","valueReply","replyCom","buttonToggleComment","buttonToggleVote","buttonToggleReply","arrCom","CommentPost","Comment","VoteCommentButton","CommentVote","CommentDesc","fontStyle","CommentTime","CommentTime2","VoteCommentButton2","LogoReply","Logo","CommentReplyMobile","ReplyComment","ReplyCommentMobile","replyMobileBtn","replyMobileCom","buttonReplyComment","fetchedComment","arrayCom","keys","commentz","datacom","comPost","com","PostDescComment","PostDescComment2","AllComment","ShowPostComment","fetchedPostComment","Start","path","component","App","Boolean","hostname","app","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9309137e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__38x3k\",\"VoteBox\":\"Post_VoteBox__Gb5Nq\",\"PostThread\":\"Post_PostThread__2evlG\",\"PostDesc\":\"Post_PostDesc__29ZtV\",\"PostDesc0\":\"Post_PostDesc0__erQ98\",\"PostDescP\":\"Post_PostDescP__3oUaL\",\"PostDesc2\":\"Post_PostDesc2__915MG\",\"Para\":\"Post_Para__ujbhq\",\"VoteMedia\":\"Post_VoteMedia__Xla-F\",\"ToggleButton\":\"Post_ToggleButton__2YFDW\",\"PostLogo\":\"Post_PostLogo__1oeHl\",\"PostSubreddit\":\"Post_PostSubreddit__32kJ7\",\"AllComment\":\"Post_AllComment__39LXP\",\"CommentPost\":\"Post_CommentPost__oBE7J\",\"Comment\":\"Post_Comment__1Uf73\",\"CommentVote\":\"Post_CommentVote__lENgX\",\"CommentTime\":\"Post_CommentTime__2JPRO\",\"CommentTime2\":\"Post_CommentTime2__3Wmdo\",\"VoteCommentButton\":\"Post_VoteCommentButton__1Asg2\",\"VoteCommentButton2\":\"Post_VoteCommentButton2__Adb91\",\"PostDescComment2\":\"Post_PostDescComment2__2pJsh\",\"ToggleReply\":\"Post_ToggleReply__2WIMQ\",\"ShowReplyComment\":\"Post_ShowReplyComment__xqzEK\",\"PostDescCommentVote\":\"Post_PostDescCommentVote__3WK-Z\",\"SubmitComment\":\"Post_SubmitComment__3fuld\",\"PostDescComment\":\"Post_PostDescComment__21cnb\",\"PostDesc1\":\"Post_PostDesc1__3vtie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__3oBon\",\"Toolbar_Post\":\"Menu_Toolbar_Post__3wI2R\",\"footer\":\"Menu_footer__3fr2x\",\"Empty\":\"Menu_Empty__1yQJh\",\"RightToolbar\":\"Menu_RightToolbar__icjUd\",\"MobileSubmit\":\"Menu_MobileSubmit__3NQef\",\"Sublist\":\"Menu_Sublist__1BJZn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Submit\":\"Submit_Submit__2x-Ug\",\"SubmitInput\":\"Submit_SubmitInput__3Oyau\",\"SubmitTextarea\":\"Submit_SubmitTextarea__bO7SK\",\"SubmitSub\":\"Submit_SubmitSub__AILvJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sublist\":\"Sublist_Sublist__8tvBi\",\"ToolbarSub\":\"Sublist_ToolbarSub__1b6fk\",\"Toolbar\":\"Sublist_Toolbar__LpA65\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RightToolbar\":\"RightToolbar_RightToolbar__bNW_w\",\"Submit\":\"RightToolbar_Submit__73dan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ReplyComment\":\"CommentReplyMobile_ReplyComment__2ix16\",\"ReplyCommentMobile\":\"CommentReplyMobile_ReplyCommentMobile__1HIKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tombol\":\"Tombol_Tombol__OUnkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"upVotePost\":\"upVotePost_upVotePost__1sjer\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"downVotePost\":\"downVotePost_downVotePost__26Gj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToggleButton\":\"ToggleButton_ToggleButton__ZZtFo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Para\":\"Para_Para__1VfLe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LogoCompany\":\"LogoCompany_LogoCompany__1-WMN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Submitbox\":\"Submitbox_Submitbox__2V-G0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dropback\":\"Dropback_Dropback___2RPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UpVoteComment\":\"UpVoteComment_UpVoteComment__1TVo2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DownVoteComment\":\"DownVoteComment_DownVoteComment__1IC5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CommentData\":\"CommentData_CommentData__26TkX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SubmitComment\":\"SubmitComment_SubmitComment__SGXLG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"LogoReply_Logo__1WOG5\"};","const Kids = props => props.children;\r\n\r\nexport default Kids;\r\n","import React from \"react\";\r\nimport Kids from \"../UI/kids\";\r\nimport cssmodule from \"../Submit/Submit.module.css\";\r\nconst Submit = props => {\r\n  let inputList = null;\r\n  switch (props.inputTitle) {\r\n    case \"input\":\r\n      inputList = (\r\n        <div>\r\n          <div>Title</div>\r\n          <textarea\r\n            maxLength=\"300\"\r\n            className={cssmodule.SubmitInput}\r\n            {...props.inputData}\r\n            onChange={props.changed}\r\n            value={props.value}\r\n          />\r\n        </div>\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputList = (\r\n        <div>\r\n          <div>Text</div>\r\n          <textarea\r\n            className={cssmodule.SubmitTextarea}\r\n            cols=\"75\"\r\n            rows=\"10\"\r\n            {...props.inputData}\r\n            onChange={props.changed}\r\n            value={props.value}\r\n          />\r\n        </div>\r\n      );\r\n      break;\r\n    case \"text\":\r\n      inputList = (\r\n        <div>\r\n          <input\r\n            {...props.inputData}\r\n            onChange={props.changed}\r\n            value={props.value}\r\n          />\r\n        </div>\r\n      );\r\n      break;\r\n    case \"subreddit\":\r\n      inputList = (\r\n        <div>\r\n          <div>Subreddit</div>\r\n          <input\r\n            maxLength=\"20\"\r\n            className={cssmodule.SubmitSub}\r\n            {...props.inputData}\r\n            onChange={props.changed}\r\n            value={props.value}\r\n          />\r\n        </div>\r\n      );\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Kids>\r\n      <div className={cssmodule.Submit}>\r\n        <ul>\r\n          <li>{inputList}</li>\r\n        </ul>\r\n      </div>\r\n    </Kids>\r\n  );\r\n};\r\nexport default Submit;\r\n","import React from \"react\";\r\nimport cssmodule from \"../Tombol/Tombol.module.css\";\r\nconst Tombol = props => (\r\n  <button\r\n    className={cssmodule.Tombol}\r\n    onClick={props.tombol}\r\n    disabled={props.disabled}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\n\r\nexport default Tombol;\r\n","import React, { Component } from \"react\";\r\nimport Submit from \"../Submit/Submit\";\r\nimport Tombol from \"../Tombol/Tombol\";\r\nimport fetch from \"isomorphic-fetch\";\r\nimport Kids from \"../UI/kids\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass SubmitData extends Component {\r\n  state = {\r\n    dataList: {\r\n      title: {\r\n        inputTitle: \"input\",\r\n        inputData: {\r\n          type: \"text\",\r\n          placeholder: \"Title\"\r\n        },\r\n        value: \"\",\r\n        validation: { required: true },\r\n        valid: false\r\n      },\r\n      paragraph: {\r\n        inputTitle: \"textarea\",\r\n        inputData: {\r\n          type: \"text\",\r\n          placeholder: \"Text\"\r\n        },\r\n        value: \"\",\r\n        validation: { required: true },\r\n        valid: false\r\n      },\r\n      subreddit: {\r\n        inputTitle: \"subreddit\",\r\n        inputData: {\r\n          type: \"text\",\r\n          placeholder: \"Subreddit\"\r\n        },\r\n        value: \"\",\r\n        validation: { required: true },\r\n        valid: false\r\n      }\r\n    },\r\n    isEmptied: false\r\n  };\r\n\r\n  continueTombol = event => {\r\n    event.preventDefault();\r\n    const dataPost = {};\r\n    for (let formIdentifier in this.state.dataList) {\r\n      dataPost[formIdentifier] = this.state.dataList[formIdentifier].value;\r\n    }\r\n    const tz = Date();\r\n    const listdata = {\r\n      dataList: dataPost,\r\n      vote: 1,\r\n      time: tz,\r\n      code: Math.random()\r\n        .toString(36)\r\n        .substring(2, 12),\r\n      username: Math.random()\r\n        .toFixed(8)\r\n        .substr(2, 10),\r\n      indexComment: 0\r\n    };\r\n\r\n    if (this.state.isEmptied) {\r\n      fetch(\"https://redditclone-project.firebaseio.com/data.json\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        },\r\n        body: JSON.stringify(listdata)\r\n      })\r\n        .then(res => {\r\n          console.log(res);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n      alert(\"Thank you For Posting\");\r\n      window.location.reload(true);\r\n      this.props.history.replace(\"/\");\r\n    } else {\r\n      alert(\"Please fill the data\");\r\n    }\r\n  };\r\n\r\n  checkValid(value, rules) {\r\n    let isValid = false;\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\";\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  inputChange = (event, inputIdentifier) => {\r\n    const updateddataList = {\r\n      ...this.state.dataList\r\n    };\r\n    const updatedStatedataList = {\r\n      ...updateddataList[inputIdentifier]\r\n    };\r\n    updatedStatedataList.value = event.target.value;\r\n    updatedStatedataList.valid = this.checkValid(\r\n      updatedStatedataList.value,\r\n      updatedStatedataList.validation\r\n    );\r\n    updateddataList[inputIdentifier] = updatedStatedataList;\r\n    let dataIsValid = true;\r\n    for (let inputIdentifier in updateddataList) {\r\n      dataIsValid = updateddataList[inputIdentifier].valid && dataIsValid;\r\n    }\r\n    this.setState({ dataList: updateddataList, isEmptied: dataIsValid });\r\n    console.log(updatedStatedataList);\r\n    console.log(dataIsValid);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const arrayData = [];\r\n    for (let key in this.state.dataList) {\r\n      arrayData.push({\r\n        id: key,\r\n        data: this.state.dataList[key]\r\n      });\r\n    }\r\n    let data = (\r\n      <form>\r\n        {arrayData.map(array => (\r\n          <Submit\r\n            key={array.id}\r\n            inputTitle={array.data.inputTitle}\r\n            inputData={array.data.inputData}\r\n            changed={event => this.inputChange(event, array.id)}\r\n            value={array.data.value}\r\n          />\r\n        ))}\r\n        <Tombol tombol={this.continueTombol}>Submit</Tombol>\r\n      </form>\r\n    );\r\n    return (\r\n      <Kids>\r\n        <div>\r\n          <h4>Submit Your Post</h4>\r\n          {data}\r\n        </div>\r\n        {this.props.children}\r\n      </Kids>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SubmitData);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport fetch from \"isomorphic-fetch\";\r\nimport cssmodule from \"../upVotePost/upVotePost.module.css\";\r\nclass UpVotePost extends Component {\r\n  state = {\r\n    vote: this.props.vote,\r\n    isUpVoted: true\r\n  };\r\n  upVoteButton = () => {\r\n    const oldCount = this.props.vote;\r\n    const newCount = oldCount + 1;\r\n    const newVote = newCount;\r\n    fetch(\r\n      `https://redditclone-project.firebaseio.com/data/${this.props.datakey}/vote.json`,\r\n      {\r\n        method: \"put\",\r\n        body: JSON.stringify(newVote),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        }\r\n      }\r\n    );\r\n    console.log(\"Thanks for Vote \");\r\n    this.setState(prevState => {\r\n      return { isUpVoted: !prevState.isUpVoted };\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={cssmodule.upVotePost}>\r\n        <div\r\n          onClick={this.upVoteButton}\r\n          style={{\r\n            color: this.state.isUpVoted\r\n              ? \"color: rgba(59, 59, 59, 0.76)\"\r\n              : \"red\"\r\n          }}\r\n        >\r\n          &#9650;\r\n        </div>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(UpVotePost);\r\n","import React, { Component } from \"react\";\r\nimport cssmodule from \"../downVotePost/downVotePost.module.css\";\r\nclass downVotePost extends Component {\r\n  state = {\r\n    isDownVoted: true\r\n  };\r\n\r\n  downVoteButton = event => {\r\n    event.preventDefault();\r\n    const oldCount = this.props.vote;\r\n    const newCount = oldCount - 1;\r\n    const newVote = newCount;\r\n    if (this.props.vote > 0) {\r\n      fetch(\r\n        `https://redditclone-project.firebaseio.com/data/${this.props.datakey}/vote.json`,\r\n        {\r\n          method: \"put\",\r\n          body: JSON.stringify(newVote),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\"\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      console.log(\"Vote Already 0\");\r\n      return null;\r\n    }\r\n    console.log(\"Man, Please dont downvote this post\");\r\n\r\n    this.setState(prevState => {\r\n      return { isDownVoted: !prevState.isDownVoted };\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={cssmodule.downVotePost}>\r\n        <div\r\n          onClick={this.downVoteButton}\r\n          style={{\r\n            color: this.state.isDownVoted\r\n              ? \"color: rgba(59, 59, 59, 0.76)\"\r\n              : \"aqua\"\r\n          }}\r\n        >\r\n          &#9660;\r\n        </div>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default downVotePost;\r\n","import React, { Component } from \"react\";\r\nimport cssmodule from \"../ToggleButton/ToggleButton.module.css\";\r\n\r\nclass ToggleButton extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={cssmodule.ToggleButton}\r\n        onClick={this.props.clicked}\r\n        style={{\r\n          backgroundColor: this.props.show\r\n            ? \"rgba(161, 161, 161, 0.863)\"\r\n            : \"tomato\"\r\n        }}\r\n      >\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToggleButton;\r\n","import React from \"react\";\r\nimport cssmodule from \"../Para/Para.module.css\";\r\nconst Para = props => (\r\n  <p\r\n    className={cssmodule.Para}\r\n    style={{\r\n      display: props.show ? \"none\" : \"\"\r\n    }}\r\n  >\r\n    {props.paragraph}\r\n  </p>\r\n);\r\n\r\nexport default Para;\r\n","import React from \"react\";\r\nimport cssmodule from \"../Logo/LogoCompany.module.css\";\r\nconst LogoCompany = props => (\r\n  <div className={cssmodule.LogoCompany}>\r\n    <p></p>\r\n\r\n    <div></div>\r\n    <div></div>\r\n    <label></label>\r\n  </div>\r\n);\r\nexport default LogoCompany;\r\n","import React from \"react\";\r\nimport UpVotePost from \"./upVotePost/upVotePost\";\r\nimport { Switch, Route, withRouter, Link } from \"react-router-dom\";\r\nimport { Component } from \"react\";\r\nimport DownVotePost from \"./downVotePost/downVotePost\";\r\nimport ToggleButton from \"../UI/ToggleButton/ToggleButton\";\r\nimport Para from \"./Para/Para\";\r\nimport cssmodule from \"../Post/Post.module.css\";\r\nimport LogoCompany from \"../UI/Logo/LogoCompany\";\r\n\r\nclass Post extends Component {\r\n  state = {\r\n    votePost: this.props.vote,\r\n    para: true,\r\n    toggleButton: true,\r\n    dataSub: this.props.dataList.subreddit,\r\n  };\r\n  componentDidMount() {\r\n    if (\r\n      this.props.location.pathname === `/r/${this.props.dataList.subreddit}`\r\n    ) {\r\n      return this.props.match.params.id === this.props.location.pathname;\r\n    }\r\n  }\r\n\r\n  paraToggleHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { para: !prevState.para, toggleButton: !prevState.toggleButton };\r\n    });\r\n  };\r\n\r\n  buttonToggleHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { toggleButton: !prevState.toggleButton };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const IDkey = [];\r\n    for (let key in this.props.dataList) {\r\n      IDkey.push({\r\n        id: key,\r\n        index: this.props.dataList[key],\r\n      });\r\n    }\r\n    let parag = null;\r\n    if (this.props.dataList.paragraph.length >= 250) {\r\n      parag = this.props.dataList.paragraph.substring(0, 250) + \"....\";\r\n    } else parag = this.props.dataList.paragraph;\r\n    return (\r\n      <div className={cssmodule.Post}>\r\n        <div className={cssmodule.VoteBox}>\r\n          <UpVotePost\r\n            dataList={this.props.dataList}\r\n            key={this.props.id}\r\n            vote={this.props.vote}\r\n            datakey={this.props.datakey}\r\n          />\r\n          <p style={{ color: \"white\" }}>{this.props.vote}</p>\r\n          <DownVotePost\r\n            dataList={this.props.dataList}\r\n            key={this.props.id}\r\n            vote={this.props.vote}\r\n            datakey={this.props.datakey}\r\n          />\r\n          <div className={cssmodule.PostLogo}>\r\n            <Link\r\n              to={`/r/${this.props.dataList.subreddit.toLowerCase()}/comment/${\r\n                this.props.code\r\n              }`}\r\n            >\r\n              <LogoCompany />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className={cssmodule.PostThread}>\r\n          <label>\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"black\" }}\r\n              to={`/r/${this.props.dataList.subreddit.toLowerCase()}/comment/${\r\n                this.props.code\r\n              }/${this.props.dataList.title\r\n                .replace(/ /g, \"_\")\r\n                .substring(0, 40)}/`}\r\n            >\r\n              {this.props.dataList.title}{\" \"}\r\n            </Link>\r\n            <Link to={\"/r/\" + this.props.dataList.subreddit.toLowerCase()}>\r\n              <label className={cssmodule.PostSubreddit}>\r\n                (self.{this.props.dataList.subreddit.toLowerCase()})\r\n              </label>\r\n            </Link>\r\n            <div className={cssmodule.PostDesc}>\r\n              <p className={cssmodule.PostDesc0}>\r\n                {\" \"}\r\n                <label>&#8593;</label> {this.props.vote}{\" \"}\r\n                {this.props.time.substring(4, 24)}\r\n              </p>\r\n              <div className={cssmodule.PostDescP}>\r\n                <Link\r\n                  className={cssmodule.PostDesc2}\r\n                  to={`/r/${this.props.dataList.subreddit.toLowerCase()}/comment/${\r\n                    this.props.code\r\n                  }`}\r\n                >\r\n                  <p>{parag}</p>\r\n                </Link>\r\n              </div>\r\n\r\n              <p className={cssmodule.PostDesc1}>\r\n                submited at {this.props.time} by {this.props.username} to{\" \"}\r\n                <Link to={\"/r/\" + this.props.dataList.subreddit.toLowerCase()}>\r\n                  <label style={{ cursor: \"pointer\" }}>\r\n                    /r/{this.props.dataList.subreddit.toLowerCase()}\r\n                  </label>\r\n                </Link>{\" \"}\r\n              </p>\r\n              <p className={cssmodule.PostDesc1}>\r\n                <Link\r\n                  to={`/r/${this.props.dataList.subreddit.toLowerCase()}/comment/${\r\n                    this.props.code\r\n                  }/${this.props.dataList.title\r\n                    .replace(/ /g, \"_\")\r\n                    .substring(0, 40)}/`}\r\n                >\r\n                  comments\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </label>\r\n          <div>\r\n            <div className={cssmodule.ToggleButton}>\r\n              <ToggleButton\r\n                clicked={this.paraToggleHandler}\r\n                show={this.state.toggleButton}\r\n              />\r\n            </div>\r\n            <div className={cssmodule.Para}>\r\n              <Para\r\n                show={this.state.para}\r\n                paragraph={this.props.dataList.paragraph}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p className={cssmodule.VoteMedia}>\r\n          <label>\r\n            <UpVotePost\r\n              dataList={this.props.dataList}\r\n              key={this.props.id}\r\n              vote={this.props.vote}\r\n              datakey={this.props.datakey}\r\n            />\r\n          </label>\r\n          <label>\r\n            <DownVotePost\r\n              dataList={this.props.dataList}\r\n              key={this.props.id}\r\n              vote={this.props.vote}\r\n              datakey={this.props.datakey}\r\n            />\r\n          </label>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Post);\r\n","import React, { Component } from \"react\";\r\nimport Post from \"../Post\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass ShowPost extends Component {\r\n  state = {\r\n    dataList: [],\r\n    hari: \"\",\r\n    load: false\r\n  };\r\n  componentDidMount() {\r\n    fetch(\"https://redditclone-project.firebaseio.com/data.json\", {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        console.log(res);\r\n        const fetchedListData = [];\r\n        for (let key in res) {\r\n          fetchedListData.push({\r\n            ...res[key],\r\n            id: key\r\n          });\r\n        }\r\n        this.setState({ dataList: fetchedListData });\r\n        console.log(\"datalist =\" + res);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let postData = null;\r\n    if (this.state.dataList !== null) {\r\n      postData = (\r\n        <div>\r\n          {this.state.dataList\r\n            .sort((a, b) => a - b)\r\n            .reverse()\r\n            .map((data, index) => {\r\n              if (\r\n                this.props.history.location.pathname ===\r\n                `/r/${data.dataList.subreddit.toLowerCase()}`\r\n              ) {\r\n                return (\r\n                  <Post\r\n                    number={index}\r\n                    key={data.id}\r\n                    dataList={data.dataList}\r\n                    vote={data.vote}\r\n                    time={data.time}\r\n                    subreddit={data.dataList.subreddit}\r\n                    code={data.code}\r\n                    indexComment={data.indexComment}\r\n                    username={data.username}\r\n                  ></Post>\r\n                );\r\n              } else return null;\r\n            })}\r\n        </div>\r\n      );\r\n    } else return <div>Post Not Found</div>;\r\n    return (\r\n      <div>\r\n        <div>{postData}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ShowPost);\r\n","import React, { Component } from \"react\";\r\nimport Post from \"../Post/Post\";\r\n\r\nimport fetch from \"isomorphic-fetch\";\r\nimport Kids from \"../UI/kids\";\r\n\r\nclass Subreddit extends Component {\r\n  state = {\r\n    dataList: [],\r\n    hari: \"\",\r\n    load: false,\r\n    submit: false\r\n  };\r\n  componentDidMount() {\r\n    fetch(\"https://redditclone-project.firebaseio.com/data.json\", {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        console.log(res);\r\n        const fetchedListData = [];\r\n        for (let key in res) {\r\n          fetchedListData.push({\r\n            ...res[key],\r\n            id: key\r\n          });\r\n        }\r\n        this.setState({ dataList: fetchedListData });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let postData = (\r\n      <div>\r\n        {this.state.dataList\r\n          .sort((a, b) => a - b)\r\n          .reverse()\r\n          .map((data, index) => {\r\n            return (\r\n              <div key={data.id}>\r\n                <Post\r\n                  number={index}\r\n                  key={data.id}\r\n                  dataList={data.dataList}\r\n                  vote={data.vote}\r\n                  time={data.time}\r\n                  subreddit={data.dataList.subreddit}\r\n                  datakey={data.id}\r\n                  code={data.code}\r\n                  indexComment={data.indexComment}\r\n                  username={data.username}\r\n                ></Post>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Kids>{postData}</Kids>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Subreddit;\r\n","import React, { Component } from \"react\";\r\nimport fetch from \"isomorphic-fetch\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cssmodule from \"../SubList/Sublist.module.css\";\r\nclass Sublist extends Component {\r\n  state = {\r\n    dataList: [],\r\n    indexSub: 3,\r\n    moreClicked: true,\r\n    toolbarSubreddit: false\r\n  };\r\n  componentDidMount() {\r\n    fetch(\"https://redditclone-project.firebaseio.com/data.json\", {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        const fetchedListData = [];\r\n        for (let key in res) {\r\n          fetchedListData.push({\r\n            ...res[key],\r\n            id: key\r\n          });\r\n        }\r\n        this.setState({ dataList: fetchedListData });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  moreIndex = () => {\r\n    const oldIndex = 12;\r\n    this.setState({ indexSub: oldIndex, moreClicked: false });\r\n  };\r\n\r\n  buttonToolbarSub = () => {\r\n    this.setState(prevState => {\r\n      return { toolbarSubreddit: !prevState.toolbarSubreddit };\r\n    });\r\n  };\r\n  render() {\r\n    const uniquez = [\r\n      ...new Set(\r\n        this.state.dataList.map(data => data.dataList.subreddit.toLowerCase())\r\n      )\r\n    ];\r\n    const sortFiltz = uniquez.sort((a, b) => {\r\n      if (a < b) {\r\n        return -1;\r\n      }\r\n      if (a > b) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    const index = this.state.indexSub;\r\n    const filtz = sortFiltz.slice(0, index).map(data => {\r\n      return (\r\n        <label key={data}>\r\n          <Link\r\n            to={\"/r/\" + data}\r\n            style={{ textDecoration: \"none\", color: \"black\" }}\r\n          >\r\n            /r/{data}\r\n          </Link>\r\n          <label>{\" - \"}</label>\r\n        </label>\r\n      );\r\n    });\r\n    const filtMenu = sortFiltz.map(data => {\r\n      return (\r\n        <ul key={data}>\r\n          <li>\r\n            <Link\r\n              onClick={this.buttonToolbarSub}\r\n              className={cssmodule.Toolbar}\r\n              to={\"/r/\" + data}\r\n              style={{ textDecoration: \"none\", color: \"black\" }}\r\n            >\r\n              /r/{data}\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    });\r\n    return (\r\n      <div className={cssmodule.Sublist}>\r\n        <label onClick={this.buttonToolbarSub} style={{ cursor: \"pointer\" }}>\r\n          SubredditList\r\n        </label>\r\n        {\" | \"}\r\n        {filtz}\r\n        {\"     \"}\r\n        <label\r\n          onClick={this.moreIndex}\r\n          style={{ display: this.state.moreClicked ? \"\" : \"none\" }}\r\n        >\r\n          more\r\n        </label>\r\n        {\" | \"} <label style={{ fontSize: \"12px\" }}></label>\r\n        <div\r\n          style={{ display: this.state.toolbarSubreddit ? \"inherit\" : \"none\" }}\r\n          className={cssmodule.ToolbarSub}\r\n        >\r\n          <div>{filtMenu}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sublist;\r\n","import React from \"react\";\r\nimport cssmodule from \"../Dropback/Dropback.module.css\";\r\n\r\nconst Dropback = props =>\r\n  props.show ? (\r\n    <div className={cssmodule.Dropback} onClick={props.click}></div>\r\n  ) : null;\r\n\r\nexport default Dropback;\r\n","import React from \"react\";\r\nimport Kids from \"../UI/kids\";\r\nimport cssmodule from \"../Submit/Submitbox.module.css\";\r\nimport Dropback from \"../UI/Dropback/Dropback\";\r\nconst Submitbox = props => {\r\n  return (\r\n    <Kids>\r\n      <Dropback show={props.show} click={props.click} />\r\n      <div\r\n        className={cssmodule.Submitbox}\r\n        style={{\r\n          transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n          opacity: props.show ? \"1\" : \"0\",\r\n          overflowY: props.show ? \"hidden\" : \"hidden\"\r\n        }}\r\n      >\r\n        {\" \"}\r\n        {props.children}\r\n      </div>\r\n    </Kids>\r\n  );\r\n};\r\n\r\nexport default Submitbox;\r\n","import React, { Component } from \"react\";\r\nimport Submitbox from \"../../Submit/Submitbox\";\r\nimport SubmitData from \"../../SubmitData/SubmitData\";\r\nimport cssmodule from \"../RightToolbar/RightToolbar.module.css\";\r\nclass RightToolbar extends Component {\r\n  render() {\r\n    const submit = (\r\n      <div onClick={this.props.click} style={{ cursor: \"pointer\" }}>\r\n        Submit Your Post\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Submitbox show={this.props.show} click={this.props.click}>\r\n          <SubmitData />\r\n        </Submitbox>\r\n        <div className={cssmodule.RightToolbar}>\r\n          <div className={cssmodule.Submit}>{submit}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RightToolbar;\r\n","import React, { Component } from \"react\";\r\nimport Kids from \"../kids\";\r\nimport Sublist from \"../../SubList/Sublist\";\r\nimport RightToolbar from \"../RightToolbar/RightToolbar\";\r\nimport cssmodule from \"../Menu/Menu.module.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nclass Menu extends Component {\r\n  state = {\r\n    submit: false\r\n  };\r\n  submitDataConfirm = () => {\r\n    const submitData = !this.state.submit;\r\n    this.setState({ submit: submitData });\r\n    console.log(this.state.submit);\r\n  };\r\n  render() {\r\n    return (\r\n      <Kids>\r\n        <div>\r\n          <div className={cssmodule.Sublist}>\r\n            <Sublist />\r\n          </div>\r\n          <div className={cssmodule.Menu}>\r\n            {\" \"}\r\n            <Link to={\"/\"} style={{ textDecoration: \"none\", color: \"black\" }}>\r\n              &#9876; RedditClone\r\n            </Link>\r\n            <Link to={\"/submit\"} className={cssmodule.MobileSubmit}>\r\n              Submit &#9993;\r\n            </Link>\r\n          </div>\r\n          <div className={cssmodule.Toolbar_Post}>\r\n            <main>\r\n              {this.props.children}\r\n              <div className={cssmodule.Empty}></div>\r\n            </main>\r\n            <div className={cssmodule.RightToolbar}>\r\n              <RightToolbar\r\n                click={this.submitDataConfirm}\r\n                show={this.state.submit}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={cssmodule.footer}>Copyright</div>\r\n        </div>\r\n      </Kids>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Menu);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport cssmodule from \"../UpVoteComment/UpVoteComment.module.css\";\r\nclass UpVoteComment extends Component {\r\n  state = {\r\n    isUpVoted: true\r\n  };\r\n  upVoteButton = () => {\r\n    const oldCount = this.props.vote;\r\n    const newCount = oldCount + 1;\r\n    const newVote = newCount;\r\n    fetch(\r\n      `https://redditclone-project.firebaseio.com/data/${this.props.datakey}/commentz/com${this.props.indexCom}/vote.json`,\r\n      {\r\n        method: \"put\",\r\n        body: JSON.stringify(newVote),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        }\r\n      }\r\n    );\r\n    console.log(\"Thanks for Vote \");\r\n    this.setState(prevState => {\r\n      return { isUpVoted: !prevState.isUpVoted };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={cssmodule.UpVoteComment}>\r\n        <div\r\n          onClick={this.upVoteButton}\r\n          style={{\r\n            color: this.state.isUpVoted\r\n              ? \"color: rgba(59, 59, 59, 0.76)\"\r\n              : \"red\"\r\n          }}\r\n        >\r\n          &#9650;\r\n        </div>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(UpVoteComment);\r\n","import React, { Component } from \"react\";\r\nimport cssmodule from \"../DownVoteComment/DownVoteComment.module.css\";\r\nclass DownVoteComment extends Component {\r\n  state = {\r\n    isDownVoted: true\r\n  };\r\n\r\n  downVoteButton = event => {\r\n    event.preventDefault();\r\n    const oldCount = this.props.vote;\r\n    const newCount = oldCount - 1;\r\n    const newVote = newCount;\r\n\r\n    fetch(\r\n      `https://redditclone-project.firebaseio.com/data/${this.props.datakey}/commentz/com${this.props.indexCom}/vote.json`,\r\n      {\r\n        method: \"put\",\r\n        body: JSON.stringify(newVote),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        }\r\n      }\r\n    );\r\n      \r\n    console.log(\"Man, Please dont downvote this post\");\r\n\r\n    this.setState(prevState => {\r\n      return { isDownVoted: !prevState.isDownVoted };\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={cssmodule.DownVoteComment}>\r\n        <div\r\n          onClick={this.downVoteButton}\r\n          style={{\r\n            color: this.state.isDownVoted\r\n              ? \"color: rgba(59, 59, 59, 0.76)\"\r\n              : \"aqua\"\r\n          }}\r\n        >\r\n          &#9660;\r\n        </div>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DownVoteComment;\r\n","import React from \"react\";\r\n\r\nconst HideComment = props => {\r\n  if (props.show) {\r\n    return (\r\n      <label\r\n        onClick={props.clicked}\r\n        style={({ fontSize: \"15px\" }, { cursor: \"pointer\" })}\r\n      >\r\n        {\" (+) \"}\r\n      </label>\r\n    );\r\n  } else\r\n    return (\r\n      <label\r\n        onClick={props.clicked}\r\n        style={({ fontSize: \"15px\" }, { cursor: \"pointer\" })}\r\n      >\r\n        {\" (-) \"}\r\n      </label>\r\n    );\r\n};\r\n\r\nexport default HideComment;\r\n","import React from \"react\";\r\nimport cssmodule from \"../Comment/CommentData.module.css\";\r\nconst CommentData = props => {\r\n  let comment = props.comment;\r\n\r\n  return (\r\n    <p\r\n      className={cssmodule.CommentData}\r\n      style={{\r\n        display: props.show ? \"none\" : \"\"\r\n      }}\r\n    >\r\n      {comment}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default CommentData;\r\n","import React from \"react\";\r\nimport cssmodule from \"../../Post.module.css\";\r\n\r\nconst ToggleReply = props => (\r\n  <label className={cssmodule.ToggleReply} onClick={props.clicked}>\r\n    reply\r\n  </label>\r\n);\r\n\r\nexport default ToggleReply;\r\n","import React, { Component } from \"react\";\r\nimport Tombol from \"../../Tombol/Tombol\";\r\nimport cssmodule from \"../SubmitComment/SubmitComment.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass SubmitComment extends Component {\r\n  state = {\r\n    comment: {\r\n      value: this.props.usernameComment \r\n    },\r\n    isEmptied: true\r\n  };\r\n\r\n  inputChange = event => {\r\n    const updateComment = {\r\n      ...this.state.comment\r\n    };\r\n    updateComment.value = event.target.value;\r\n    this.setState({ comment: updateComment });\r\n    if (event.target.value === \"\") {\r\n      this.setState({ isEmptied: true });\r\n    } else {\r\n      this.setState({ isEmptied: false });\r\n    }\r\n  };\r\n\r\n  continueComment = event => {\r\n    event.preventDefault();\r\n    const commentValue = this.state.comment.value;\r\n    const indexCom = this.props.indexComment;\r\n    const tz = Date();\r\n\r\n    const listComment = {\r\n      vote: 1,\r\n      time: tz,\r\n      username: Math.random()\r\n        .toFixed(8)\r\n        .substr(2, 10),\r\n      comment: commentValue,\r\n      codecomment: Math.random()\r\n        .toString(36)\r\n        .substring(2, 12),\r\n      indexCommentChild: indexCom\r\n    };\r\n    if (!this.state.isEmptied) {\r\n      fetch(\r\n        `https://redditclone-project.firebaseio.com/data/${this.props.datakey}/commentz/com${this.props.indexComment}.json`,\r\n        {\r\n          method: \"put\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\"\r\n          },\r\n          body: JSON.stringify(listComment)\r\n        }\r\n      )\r\n        .then(res => {\r\n          console.log(res);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n      const oldCount = this.props.indexComment;\r\n      const newCount = oldCount + 1;\r\n      const newIndex = newCount;\r\n      fetch(\r\n        `https://redditclone-project.firebaseio.com/data/${this.props.datakey}/indexComment.json`,\r\n        {\r\n          method: \"put\",\r\n          body: JSON.stringify(newIndex),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\"\r\n          }\r\n        }\r\n      );\r\n      alert(\"Your Comment is Submitted\");\r\n      window.location.reload(true);\r\n    } else {\r\n      alert(\"Please fill the data\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let datacomment = (\r\n      <div>\r\n        <div>\r\n          <textarea\r\n            placeholder=\"Your Comment\"\r\n            cols=\"45\"\r\n            rows=\"4\"\r\n            onChange={this.inputChange}\r\n            value={this.state.comment.value}\r\n          ></textarea>\r\n        </div>\r\n        <Tombol tombol={this.continueComment}>Submit</Tombol>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className={cssmodule.SubmitComment}>\r\n        <div>{datacomment}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SubmitComment);\r\n","import React from \"react\";\r\nimport SubmitComment from \"../../../Submit/SubmitComment/SubmitComment\";\r\n\r\nconst ShowReplyComment = props => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: props.show ? \"none\" : \"\"\r\n      }}\r\n    >\r\n      <SubmitComment\r\n        datakey={props.datakey}\r\n        indexComment={props.indexComment}\r\n        usernameComment={\">>\" + props.usernameComment + \"\\n\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowReplyComment;\r\n","import React, { Component } from \"react\";\r\nimport cssmodule from \"../../Post.module.css\";\r\nimport UpVoteComment from \"../UpVoteComment/UpVoteComment\";\r\nimport DownVoteComment from \"../DownVoteComment/DownVoteComment\";\r\nimport HideComment from \"../../../UI/HideComment/HideComment\";\r\nimport CommentData from \"../Comment/CommentData\";\r\nimport ToggleReply from \"../ShowReplyComment/ToggleReply\";\r\nimport ShowReplyComment from \"../ShowReplyComment/ShowReplyComment\";\r\nclass CommentPostData extends Component {\r\n  state = {\r\n    dataList: [],\r\n    isComment: false,\r\n    para: true,\r\n    toggleButton: true,\r\n    comment: true,\r\n    toggleComment: false,\r\n    toggleVote: true,\r\n    valueReply: \"\",\r\n    replyCom: true\r\n  };\r\n\r\n  paraToggleHandler = () => {\r\n    this.setState(prevState => {\r\n      return { para: !prevState.para, toggleButton: !prevState.toggleButton };\r\n    });\r\n  };\r\n\r\n  buttonToggleHandler = () => {\r\n    this.setState(prevState => {\r\n      return { toggleButton: !prevState.toggleButton };\r\n    });\r\n  };\r\n\r\n  buttonToggleComment = () => {\r\n    this.setState(prevState => {\r\n      return { toggleComment: !prevState.toggleComment };\r\n    });\r\n  };\r\n  buttonToggleVote = () => {\r\n    this.setState(prevState => {\r\n      return { toggleVote: !prevState.toggleVote };\r\n    });\r\n  };\r\n\r\n  buttonToggleReply = () => {\r\n    this.setState(prevState => {\r\n      return { replyCom: !prevState.replyCom };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let arrCom = (\r\n      <div key={this.props.id} className={cssmodule.CommentPost}>\r\n        <div className={cssmodule.Comment}>\r\n          <div className={cssmodule.VoteCommentButton}>\r\n            <UpVoteComment\r\n              key={this.props.id}\r\n              vote={this.props.vote}\r\n              datakey={this.props.datakey}\r\n              indexCom={this.props.indexCom}\r\n            />\r\n            <DownVoteComment\r\n              key={this.props.id}\r\n              vote={this.props.vote}\r\n              datakey={this.props.datakey}\r\n              indexCom={this.props.indexCom}\r\n            />\r\n          </div>\r\n          <div className={cssmodule.CommentVote}>\r\n            <div\r\n              className={cssmodule.CommentDesc}\r\n              style={{\r\n                fontStyle: this.state.toggleComment ? \"italic\" : \"normal\"\r\n              }}\r\n            >\r\n              <label>\r\n                <HideComment\r\n                  className={cssmodule.HideComment}\r\n                  clicked={this.buttonToggleComment}\r\n                  show={this.state.toggleComment}\r\n                />\r\n              </label>\r\n              <label style={{ color: \"blue\" }}>\r\n                Anonymous|{this.props.usernameComment}{\" \"}\r\n              </label>{\" \"}\r\n              <label>{this.props.vote} Points</label>\r\n              <label className={cssmodule.CommentTime}>\r\n                , Submited at {this.props.time}{\" \"}\r\n              </label>\r\n              <label className={cssmodule.CommentTime2}>\r\n                , {this.props.time.substring(4, 24)}{\" \"}\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <CommentData\r\n                comment={this.props.comment}\r\n                usernameComment={this.props.usernameComment}\r\n                show={this.state.toggleComment}\r\n              />\r\n            </div>\r\n            <div>\r\n              <ToggleReply clicked={this.buttonToggleReply} />\r\n            </div>\r\n            <div className={cssmodule.VoteCommentButton2}>\r\n              <UpVoteComment\r\n                key={this.props.id}\r\n                vote={this.props.vote}\r\n                datakey={this.props.datakey}\r\n                indexCom={this.props.indexCom}\r\n              />\r\n              <DownVoteComment\r\n                key={this.props.id}\r\n                vote={this.props.vote}\r\n                datakey={this.props.datakey}\r\n                indexCom={this.props.indexCom}\r\n              />\r\n              <div>\r\n                <div\r\n                  onClick={this.buttonToggleReply}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  &#9993;\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <ShowReplyComment\r\n              show={this.state.replyCom}\r\n              datakey={this.props.datakey}\r\n              indexComment={this.props.indexComment}\r\n              usernameComment={this.props.usernameComment}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    return <div>{arrCom}</div>;\r\n  }\r\n}\r\n\r\nexport default CommentPostData;\r\n","import React from \"react\";\r\nimport cssmodule from \"../LogoReply/LogoReply.module.css\";\r\n\r\nconst LogoReply = props => (\r\n  <div\r\n    className={cssmodule.Logo}\r\n    onClick={props.clicked}\r\n    style={{\r\n      transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\"\r\n    }}\r\n  >\r\n    <i className=\"fa fa-pencil\"></i>\r\n  </div>\r\n);\r\n\r\nexport default LogoReply;\r\n","import React from \"react\";\r\nimport cssmodule from \"../CommentReplyMobile/CommentReplyMobile.module.css\";\r\nimport Dropback from \"../../../UI/Dropback/Dropback\";\r\nimport Kids from \"../../../UI/kids\";\r\n\r\nconst CommentReplyMobile = props => (\r\n  <div className={cssmodule.ReplyComment}>\r\n    <Kids>\r\n      <Dropback show={!props.show} click={props.click} />\r\n      <div\r\n        className={cssmodule.ReplyCommentMobile}\r\n        style={{\r\n          display: props.show ? \"none\" : \"inherit\"\r\n        }}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </Kids>\r\n  </div>\r\n);\r\n\r\nexport default CommentReplyMobile;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport cssmodule from \"../Post.module.css\";\r\nimport UpVotePost from \"../upVotePost/upVotePost\";\r\nimport DownVotePost from \"../downVotePost/downVotePost\";\r\nimport LogoCompany from \"../../UI/Logo/LogoCompany\";\r\nimport ToggleButton from \"../../UI/ToggleButton/ToggleButton\";\r\nimport Para from \"../Para/Para\";\r\nimport CommentPostData from \"./CommentPostData/CommentPostData\";\r\nimport SubmitComment from \"../../Submit/SubmitComment/SubmitComment\";\r\nimport LogoReply from \"../../UI/LogoReply/LogoReply\";\r\nimport CommentReplyMobile from \"./CommentReplyMobile/CommentReplyMobile\";\r\nclass CommentPost extends Component {\r\n  state = {\r\n    dataList: [],\r\n    isComment: false,\r\n    para: true,\r\n    toggleButton: true,\r\n    comment: true,\r\n    toggleComment: false,\r\n    toggleVote: true,\r\n    valueReply: \"\",\r\n    replyCom: true,\r\n    replyMobileBtn: true,\r\n    replyMobileCom: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      `https://redditclone-project.firebaseio.com/data/${this.props.datakey}/dataList.json`,\r\n      {\r\n        method: \"get\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        const fetchedComment = [];\r\n        for (let key in res) {\r\n          fetchedComment.push({\r\n            ...res[key],\r\n            id: key,\r\n          });\r\n        }\r\n        this.setState({ dataList: fetchedComment });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  paraToggleHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { para: !prevState.para, toggleButton: !prevState.toggleButton };\r\n    });\r\n  };\r\n\r\n  buttonToggleHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { toggleButton: !prevState.toggleButton };\r\n    });\r\n  };\r\n\r\n  buttonToggleComment = () => {\r\n    this.setState((prevState) => {\r\n      return { toggleComment: !prevState.toggleComment };\r\n    });\r\n  };\r\n\r\n  buttonReplyComment = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        replyMobileBtn: !prevState.replyMobileBtn,\r\n        replyMobileCom: !prevState.replyMobileCom,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let arrayCom = [];\r\n    for (let keys in this.props.commentz) {\r\n      arrayCom.push({\r\n        id: keys,\r\n        datacom: this.props.commentz[keys],\r\n      });\r\n    }\r\n    let comPost = arrayCom.map((com) => {\r\n      return (\r\n        <CommentPostData\r\n          commentz={this.props.commentz}\r\n          datakey={this.props.datakey}\r\n          indexComment={this.props.indexComment}\r\n          username={this.props.username}\r\n          indexCom={com.datacom.indexCommentChild}\r\n          key={com.datacom.id}\r\n          vote={com.datacom.vote}\r\n          comment={com.datacom.comment}\r\n          time={com.datacom.time}\r\n          usernameComment={com.datacom.username}\r\n          click={this.buttonReplyComment}\r\n          show={this.state.replyMobileCom}\r\n        />\r\n      );\r\n    });\r\n\r\n    let postData = (\r\n      <div className={cssmodule.Post}>\r\n        <div className={cssmodule.VoteBox}>\r\n          <UpVotePost\r\n            dataList={this.props.dataList}\r\n            key={this.props.id}\r\n            vote={this.props.vote}\r\n            datakey={this.props.datakey}\r\n          />\r\n          <p>{this.props.vote}</p>\r\n          <DownVotePost\r\n            dataList={this.props.dataList}\r\n            key={this.props.id}\r\n            vote={this.props.vote}\r\n            datakey={this.props.datakey}\r\n          />\r\n          <div className={cssmodule.PostLogo}>\r\n            <LogoCompany />\r\n          </div>\r\n        </div>\r\n        <div className={cssmodule.PostThread}>\r\n          <label>\r\n            <Link\r\n              style={{ textDecoration: \"none\", color: \"black\" }}\r\n              to={`/r/${this.props.dataList.subreddit.toLowerCase()}/comment/${\r\n                this.props.code\r\n              }/${this.props.dataList.title\r\n                .replace(/ /g, \"_\")\r\n                .substring(0, 40)}/`}\r\n            >\r\n              {this.props.dataList.title}{\" \"}\r\n            </Link>\r\n            <Link to={\"/r/\" + this.props.dataList.subreddit.toLowerCase()}>\r\n              <label className={cssmodule.PostSubreddit}>\r\n                (self.{this.props.dataList.subreddit.toLowerCase()})\r\n              </label>\r\n            </Link>\r\n            <div className={cssmodule.PostDesc}>\r\n              <div className={cssmodule.PostDescComment}>\r\n                <p>\r\n                  &#8593; {this.props.vote}\r\n                  {\" Points, \"} submited at {this.props.time} by{\" \"}\r\n                  {this.props.username} to{\" \"}\r\n                  <Link\r\n                    to={\"/r/\" + this.props.dataList.subreddit.toLowerCase()}\r\n                  >\r\n                    <label\r\n                      style={({ cursor: \"pointer\" }, { fontSize: \"12px\" })}\r\n                    >\r\n                      /r/{this.props.dataList.subreddit.toLowerCase()}\r\n                    </label>\r\n                  </Link>{\" \"}\r\n                </p>\r\n                <p>\r\n                  <Link\r\n                    to={`/r/${this.props.dataList.subreddit.toLowerCase()}/comment/${\r\n                      this.props.code\r\n                    }/${this.props.dataList.title\r\n                      .replace(/ /g, \"_\")\r\n                      .substring(0, 40)}/`}\r\n                  >\r\n                    comments\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n              <div className={cssmodule.PostDescComment2}>\r\n                <p>\r\n                  {\" \"}\r\n                  <label>&#8593;</label> {this.props.vote}\r\n                  {\" Points \"}\r\n                  {this.props.time.substring(4, 24)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </label>\r\n          <div>\r\n            <div className={cssmodule.ToggleButton}>\r\n              <ToggleButton\r\n                clicked={this.paraToggleHandler}\r\n                show={this.state.toggleButton}\r\n              />\r\n            </div>\r\n            <div className={cssmodule.Para}>\r\n              <Para\r\n                show={this.state.para}\r\n                paragraph={this.props.dataList.paragraph}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p className={cssmodule.VoteMedia}>\r\n          <label>\r\n            <UpVotePost\r\n              dataList={this.props.dataList}\r\n              key={this.props.id}\r\n              vote={this.props.vote}\r\n              datakey={this.props.datakey}\r\n            />\r\n          </label>\r\n          <label>\r\n            <DownVotePost\r\n              dataList={this.props.dataList}\r\n              key={this.props.id}\r\n              vote={this.props.vote}\r\n              datakey={this.props.datakey}\r\n            />\r\n          </label>\r\n        </p>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <div>{postData}</div>\r\n        <div className={cssmodule.AllComment}>All Comment</div>\r\n        <div className={cssmodule.SubmitComment}>\r\n          <SubmitComment\r\n            className={cssmodule.SubmitComment}\r\n            datakey={this.props.datakey}\r\n            indexComment={this.props.indexComment}\r\n            usernameComment={\"\"}\r\n          />\r\n        </div>\r\n        {comPost}\r\n        <LogoReply\r\n          clicked={this.buttonReplyComment}\r\n          show={this.state.replyMobileBtn}\r\n        />\r\n        <CommentReplyMobile\r\n          click={this.buttonReplyComment}\r\n          show={this.state.replyMobileCom}\r\n        >\r\n          <SubmitComment\r\n            datakey={this.props.datakey}\r\n            indexComment={this.props.indexComment}\r\n            usernameComment={\"\"}\r\n          />\r\n        </CommentReplyMobile>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommentPost;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CommentPost from \"../CommentPost\";\r\nclass ShowPostComment extends Component {\r\n  state = {\r\n    dataList: [],\r\n    hari: \"\",\r\n    load: false\r\n  };\r\n  componentDidMount() {\r\n    fetch(\"https://redditclone-project.firebaseio.com/data.json\", {\r\n      method: \"get\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        const fetchedPostComment = [];\r\n        for (let key in res) {\r\n          fetchedPostComment.push({\r\n            ...res[key],\r\n            id: key\r\n          });\r\n        }\r\n        this.setState({ dataList: fetchedPostComment });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let postData = (\r\n      <div>\r\n        {this.state.dataList.map((data, index) => {\r\n          if (\r\n            this.props.history.location.pathname ===\r\n            `/r/${data.dataList.subreddit.toLowerCase()}/comment/${data.code.toLowerCase()}/${data.dataList.title\r\n              .replace(/ /g, \"_\")\r\n              .substring(0, 40)}/`\r\n          )\r\n            return (\r\n              <CommentPost\r\n                number={index}\r\n                key={data.id}\r\n                dataList={data.dataList}\r\n                vote={data.vote}\r\n                time={data.time}\r\n                subreddit={data.dataList.subreddit}\r\n                datakey={data.id}\r\n                code={data.code}\r\n                indexComment={data.indexComment}\r\n                commentz={data.commentz}\r\n                username={data.username}\r\n              />\r\n            );\r\n        })}\r\n      </div>\r\n    );\r\n    return <div>{postData}</div>;\r\n  }\r\n}\r\n\r\nexport default withRouter(ShowPostComment);\r\n","import React, { Component } from \"react\";\r\nimport SubmitData from \"./SubmitData/SubmitData\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport ShowPost from \"./Post/ShowPost/ShowPost\";\r\nimport Subreddit from \"./Subreddit/Subreddit\";\r\nimport Menu from \"./UI/Menu/Menu\";\r\nimport ShowPostComment from \"./Post/Comment/ShowPostComment/ShowPostComment\";\r\nimport cssmodule from \"../../src/Redditclone/Start.module.css\";\r\n\r\nclass Start extends Component {\r\n  render() {\r\n    return (\r\n      <div className={cssmodule}>\r\n        <Menu>\r\n          {/*           <Switch>\r\n            <Route\r\n              path={\"/r/:subreddit/comment/:commentid\"}\r\n              component={SubmitComment}\r\n            />\r\n            <Route path={\"/r/:subreddit\"} component={ShowPost} />\r\n            <Route path={\"/\"} component={Subreddit} />\r\n          </Switch> */}\r\n          <Switch>\r\n            <Route\r\n              path={\"/r/:subreddit/comment/:code/:title/\"}\r\n              component={ShowPostComment}\r\n            />\r\n            <Route path={\"/r/:subreddit/\"} component={ShowPost} />\r\n            <Route path={\"/submit/\"} component={SubmitData} />\r\n            <Route path={\"/\"} component={Subreddit} />\r\n          </Switch>\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Start);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Start from \"./Redditclone/Start\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Start />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst app = (\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}